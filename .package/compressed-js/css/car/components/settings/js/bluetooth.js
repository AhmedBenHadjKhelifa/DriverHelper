var Bluetooth=function(){"use strict";var e=this;e.loadDefaultAdapter(),e.registerDefaultAdapterChangeListener(),e.loadBluetoothConfig(),e.registerSelectedRemoteDeviceChangeListener(),e.loadSelectedRemoteDevice(),e._setRefreshDevicesInterval(),Settings.domElement.on("eventClick_hidePage",function(){function n(){console.log("attempts: ",t),t<3&&(t++,e.stopScan(function(e){!e||setTimeout(function(){n()},1e3)},!1))}e.isVisible(!1);var t=0;n()}),Settings.domElement.on("eventClick_showPage",function(){if($(".bluetoothContent").length||$(".deviceInfoContent").length){e.isVisible(!0);var t=-1;!e.lastSync()||(t=(new Date).getTime()-e.lastSync()),!e.scanning()&&(t===-1||t>6e5||!e.devices().length)&&(e.clearDevices(),e.scan(!0)),e.scanning()&&e.showBluetoothLoadingSpinner()}}),this.togglePower=function(){console.log("Bluetooth: toggle power called."),!!e.adapter()&&!e.togglePowerLocked()&&(e.togglePowerLocked(!0),e.adapter().powered?(showLoadingSpinner("Turning off"),e.stopScan(function(t){console.log("setPowered(false) called"),e.adapter().setPowered(!1,function(){console.log("Successfully disable bluetooth subsystem."),e.togglePowerLocked(!1),hideLoadingSpinner("Turning off")},function(t){var n="An error occured while turning bluetooth off.";console.log(n,t),alert(n),e.togglePowerLocked(!1),hideLoadingSpinner("Turning off")})},!1)):(showLoadingSpinner("Turning on"),e.stopScan(function(t){console.log("setPowered(true) called"),e.adapter().setPowered(!0,function(){console.log("Successfully enable bluetooth subsystem"),e.togglePowerLocked(!1),e.clearDevices(),e.scanning(!1),setTimeout(function(){hideLoadingSpinner("Turning on"),e.scan(!0)},1e3)},function(t){var n="An error occured while turning bluetooth on.";console.log(n,t),alert(n),e.togglePowerLocked(!1),hideLoadingSpinner("Turning on")})})))},this.togglePair=function(t){console.log("Bluetooth: toggle connection called."),console.log(t),!t||(e._clearRefreshDevicesInterval(),t.isBonded?(console.log("Bluetooth disconnect from device: "+t.address),showLoadingSpinner("Unpairing"),e.adapter().destroyBonding(t.address,function(){console.log("bluetooth unpaired from "+t.address),e.removeDevice(t.address),e.scan(!0),e._restartRefreshDevicesInterval(),hideLoadingSpinner("Unpairing")},function(t){console.log("Error: bluetooth unpairing failed: "+t),e._restartRefreshDevicesInterval(),hideLoadingSpinner("Unpairing")})):(console.log("bluetooth pair to device: "+t.address),showLoadingSpinner("Pairing"),e.adapter().createBonding(t.address,function(){console.log("bluetooth paired with "+t.address),e._restartRefreshDevicesInterval(),hideLoadingSpinner("Pairing")},function(t){console.log("Error: bluetooth pair failed: ",t),e._restartRefreshDevicesInterval(),hideLoadingSpinner("Pairing")})))},this.toogleScanDevices=function(){console.log("Bluetooth: toggle scan devices called."),e.scanning()?(console.log("Bluetooth: stop scan called."),e.stopScan(function(e){!e||alert("An error occured while stopping bluetooth discovery.")},!0)):(console.log("Bluetooth: scan called."),e.clearDevices(),e.scan(!0))},this.openDeviceDetails=function(t){console.log("Bluetooth: open device details called: ",t),e.selectedDevice(null);if(!!t){e.selectedDevice(t);var n={textTitle:"DEVICE INFO",textSubtitle:t.name.toUpperCase(),actionName:"BACK",action:function(){console.log("bluetooth openDeviceDetails"),Settings.openSetting(Settings.selectedSetting)}},r=function(e,t,n){var r='<div class="wifiNetworkInfoElement fontSizeLarge fontWeightBold fontColorNormal">';return r+="<span>",r+=e,r+=": ",r+="</span>",r+='<span data-bind="text:'+t+'">',r+="</span>",r+="</div>",r},i=function(){if(!$("#bluetoothDeviceInfoBox").length){var e="";e+='<div id="wifiAutoConnectButton" class="toggleButton subPanelToggleButton subPanelToggleButtonWide" data-bind="with: Settings.Bluetooth.selectedDevice, click: Settings.Bluetooth.toggleSelectionOfSelectedDevice, style: { display: Settings.Bluetooth.isSelectedDeviceSelectable() ? \'block\' : \'none\'}">',e+='<div class="bgColorThemeTransparent boxShadowInset toggleButtonBackground"></div>',e+='<div class="fontColorNormal fontSizeMedium fontWeightBold toggleButtonText" data-bind="text: \'SELECTED\', css: { fontColorSelected: Settings.Bluetooth.isDeviceSelected($data) }"></div>',e+="</div>",$(e).appendTo($(".tabsTopSubPanel"));var t='<div id="bluetoothDeviceInfoBox" data-bind="with: Settings.Bluetooth.selectedDevice">';t+=r("Device name","name"),t+=r("Device address","address"),t+=r("Device class","Settings.Bluetooth.getDeviceClassStr(deviceClass)"),t+=r("Paired","isBonded ? 'Yes' : 'No'"),t+=r("Connected","isConnected ? 'Yes' : 'No'"),t+=r("Trusted","isTrusted ? 'Yes' : 'No'"),t+='<div id="networkConnectButton" class="toggleButton networkConnectButton" data-bind="click: Settings.Bluetooth.togglePair">',t+='<div class="bgColorThemeTransparent boxShadowInset toggleButtonBackground"></div>',t+="<div class=\"fontColorNormal fontSizeMedium fontWeightBold toggleButtonText\" data-bind=\"text: isBonded ? 'UNPAIR' : 'PAIR'\"></div>",t+="</div>",t+="</div>",$(t).appendTo($("."+s)),ko.applyBindings(window.Settings)}},s="deviceInfoContent";Settings.domElement.tabs("clearContent"),Settings.domElement.tabs("changeContentClass",s),Settings.domElement.tabs("subpanelContentTemplateCompile",n,i)}},this.getDeviceClassStr=function(e){var t="";switch(e.major){case tizen.bluetooth.deviceMajor.MISC:t="MISC";break;case tizen.bluetooth.deviceMajor.COMPUTER:t="COMPUTER";break;case tizen.bluetooth.deviceMajor.PHONE:t="PHONE";break;case tizen.bluetooth.deviceMajor.NETWORK:t="NETWORK";break;case tizen.bluetooth.deviceMajor.AUDIO_VIDEO:t="AUDIO/VIDEO";break;case tizen.bluetooth.deviceMajor.PERIPHERAL:t="PERIPHERAL";break;case tizen.bluetooth.deviceMajor.IMAGING:t="IMAGING";break;case tizen.bluetooth.deviceMajor.WEARABLE:t="WEARABLE";break;case tizen.bluetooth.deviceMajor.TOY:t="TOY";break;case tizen.bluetooth.deviceMajor.HEALTH:t="HEALTH";break;case tizen.bluetooth.deviceMajor.UNCATEGORIZED:t="UNCATEGORIZED";break;default:t="UNKNOWN"}return t},this.isDeviceSelected=function(t){return!t||!e.selectedPhone()||e.selectedPhone()!==t.address?!1:!0},this.isSelectedDeviceSelectable=function(){if(!!e.selectedDevice()){if(e.isDeviceSelected(e.selectedDevice()))return!0;if(!!e.selectedDevice().isBonded&&!!e.selectedDevice().address&&!!e.selectedDevice().deviceClass&&e.selectedDevice().deviceClass.major===tizen.bluetooth.deviceMajor.PHONE)return!0}return!1},this.toggleSelectionOfSelectedDevice=function(){console.log("Wifi: toggle select device called",e.selectedDevice()),e.isDeviceSelected(e.selectedDevice())?e.unselectRemoteDevice():(!e.selectedPhone()||e.unselectRemoteDevice(),e.selectRemoteDevice(e.selectedDevice()))}};Bluetooth.prototype.devices=ko.observableArray([]),Bluetooth.prototype.adapter=ko.observable(null),Bluetooth.prototype.selectedDevice=ko.observable(null),Bluetooth.prototype.scanning=ko.observable(!1),Bluetooth.prototype.isVisible=ko.observable(!1),Bluetooth.prototype.selectedPhone=ko.observable(null),Bluetooth.prototype.lastSync=ko.observable(null),Bluetooth.prototype.togglePowerLocked=ko.observable(!1),Bluetooth.prototype._refreshDevicesInterval=null,Bluetooth.prototype._setRefreshDevicesInterval=function(){"use strict";var e=this;e._clearRefreshDevicesInterval(),e._refreshDevicesInterval=setInterval(function(){!!e.adapter()&&e.isVisible()&&!e.scanning()&&!document.webkitHidden&&e.refreshDevices()},1e4)},Bluetooth.prototype._clearRefreshDevicesInterval=function(){"use strict";var e=this;!e._refreshDevicesInterval||(clearInterval(e._refreshDevicesInterval),e._refreshDevicesInterval=null)},Bluetooth.prototype.loadBluetoothConfig=function(){"use strict";var e=this;e._clearRefreshDevicesInterval();var t=Configuration.get("bluetooth");console.log("loaded bluetooth config: ",JSON.stringify(t)),!t||(e.lastSync(t.lastSync),!!e.adapter()&&e.adapter().powered&&!!t.devices&&(e.clearDevices(),e.refreshDevices(),e._setRefreshDevicesInterval()))},Bluetooth.prototype.getDevice=function(e){"use strict";var t=this;t.adapter()||(console.log("Device is null"),console.log("removing device:",e.address),t.removeDevice(e.address),t.sortDevices(),t.saveBluetooth()),t.adapter().getDevice(e.address,function(e){t.addUpdateDevice(e,!1),t.sortDevices(),t.saveBluetooth(),!!t.selectedDevice()&&t.selectedDevice().address===e.address&&t.selectedDevice(e)},function(n){console.log("Could not get device info:",n),console.log("removing device:",e.address),t.removeDevice(e.address),t.sortDevices(),t.saveBluetooth()})},Bluetooth.prototype.loadDefaultAdapter=function(){"use strict";var e=this;if(typeof tizen.bluetooth!="undefined"&&typeof tizen.bluetooth.getDefaultAdapter!="undefined")try{var t=tizen.bluetooth.getDefaultAdapter();t===null?console.log("Error: Bluetooth adapter not found"):e.adapter(t)}catch(n){console.log(n)}else console.log("Bluetooth API is not available.")},Bluetooth.prototype.registerDefaultAdapterChangeListener=function(){"use strict";var e=this;if(!e.adapter()||typeof e.adapter().setChangeListener=="undefined")console.log("adapter.setChangeListener API not available.");else try{e.adapter().setChangeListener({onstatechanged:function(t){console.log("Power state is changed into: "+t),e.loadDefaultAdapter(),t||(e.clearDevices(),e.scanning(!1),e.hideBluetoothLoadingSpinner(),hideLoadingSpinner("Scanning"),e.saveBluetooth())},onnamechanged:function(e){console.log("Name is changed to: "+e)},onvisibilitychanged:function(e){console.log("Visibility is changed into: "+e)}})}catch(t){console.log(t)}},Bluetooth.prototype.show=function(e){"use strict";var t=this;console.log("Bluetooth show called"),t.isVisible(!0);var n={textTitle:"SETTINGS",textSubtitle:"BLUETOOTH",actionName:"BACK",action:function(){t.isVisible(!1),Settings.renderSettingsView()}},r=function(){if(!$("#bluetoothDevicesList").length){var e='<div id="bluetoothDevicesList" data-bind="template: { name: \'';e+=s,e+="', foreach: Settings.Bluetooth.devices }\"></div>",$(e).prependTo($("."+i));var n="";n+='<div class="buttonsArea">',n+='<div id="bluetoothRefreshButton" class="toggleButton bluetoothRefreshButton" data-bind="click: Settings.Bluetooth.toogleScanDevices, style: { display: Settings.Bluetooth.adapter().powered ? \'block\' : \'none\' }">',n+='<div class="bgColorThemeTransparent boxShadowInset toggleButtonBackground"></div>',n+="<div class=\"fontColorNormal fontSizeMedium fontWeightBold toggleButtonText\" data-bind=\"text: Settings.Bluetooth.scanning() ? 'STOP' : 'SCAN'\"></div>",n+="</div>",n+="</div>",$(n).appendTo($("."+i)),n='<div id="wifiPowerButton" class="toggleButton subPanelToggleButton subPanelToggleButtonWide" data-bind="with: Settings.Bluetooth.adapter, click: Settings.Bluetooth.togglePower">',n+='<div class="bgColorThemeTransparent boxShadowInset toggleButtonBackground"></div>',n+="<div class=\"fontColorNormal fontSizeMedium fontWeightBold toggleButtonText\" data-bind=\"text: powered ? 'TURN OFF' : 'TURN ON'\"></div>",n+="</div>",$(n).appendTo($(".tabsTopSubPanel")),ko.applyBindings(window.Settings);var r=-1;!t.lastSync()||(r=(new Date).getTime()-t.lastSync()),!t.scanning()&&(r===-1||r>6e5||!t.devices().length)&&(t.clearDevices(),t.scan(!0)),t.scanning()&&t.showBluetoothLoadingSpinner()}},i="bluetoothContent",s="template-bluetooth";Settings.domElement.tabs("clearContent"),Settings.domElement.tabs("changeContentClass",i),Settings.domElement.tabs("subpanelContentTemplateCompile",n,function(){loadTemplate(Settings.SETTINGS_TEMPLATES_PATH,s,r)});if(!Settings.domElement.find(".bluetoothPINCode").length){var o="<div class='bluetoothPINCode fontSizeXXSmall fontWeightBold fontColorTheme'>Default bluetooth pincode / passkey: 123456</div>";$(o).appendTo(Settings.domElement)}},Bluetooth.prototype.showBluetoothLoadingSpinner=function(){"use strict";if($(".bluetoothContent").length){if(!$("#loadingSpinnerBluetooth").length){var e="";e+='<div id="loadingSpinnerBluetooth" class="loadingSpinnerBluetooth loading-container loading-container-small">',e+='<div class="loading loading-small"></div>',e+="</div>",$(e).appendTo($(".tabsTopSubPanel"))}$("#loadingSpinnerBluetooth").show()}},Bluetooth.prototype.hideBluetoothLoadingSpinner=function(){"use strict";$("#loadingSpinnerBluetooth").length&&$("#loadingSpinnerBluetooth").hide()},Bluetooth.prototype.scan=function(e){"use strict";var t=this;e=typeof e=="undefined"?!0:e;if(t.scanning()){t.showBluetoothLoadingSpinner(),e&&showLoadingSpinner("Scanning");return}t.stopScan(function(n){if(!!t.adapter()&&t.adapter().powered){console.log("Bluetooth: discoverDevices called"),e&&showLoadingSpinner("Scanning"),t.showBluetoothLoadingSpinner(),t.scanning(!0),t.lastSync((new Date).getTime()),t.adapter().getKnownDevices(function(e){if(e.length){for(var n=0;n<e.length;++n)console.log("Known device name: "+e[n].name+", Address: "+e[n].address),t.addUpdateDevice(e[n]);t.sortDevices(),t.saveBluetooth(),hideLoadingSpinner("Scanning")}},function(e){console.log("Could not get known devices: ",e)});var r=null,i=function(){!r||(clearTimeout(r),r=null)},s=function(e){console.log("An error occured while discovering bluetooth devices: ",e),t.stopScan(function(){i(),t.scanning(!1),hideLoadingSpinner("Scanning"),t.hideBluetoothLoadingSpinner()},!1)};r=setTimeout(function(){s("Bluetooth adapter busy.")},3e4),t.adapter().discoverDevices({onstarted:function(){console.log("Device discovery started.")},ondevicefound:function(e){console.log("Found device - name: "+e.name+", Address: "+e.address),i(),t.addUpdateDevice(e),t.sortDevices(),t.saveBluetooth(),hideLoadingSpinner("Scanning")},ondevicedisappeared:function(e){console.log("Device disappeared: "+e),i(),t.removeDevice(e),t.sortDevices(),t.saveBluetooth()},onfinished:function(e){console.log("Device discovery finished."),i();for(var n=0;n<e.length;++n)console.log("Name: "+e[n].name+", Address: "+e[n].address),t.addUpdateDevice(e[n]);t.sortDevices(),t.scanning(!1),hideLoadingSpinner("Scanning"),t.hideBluetoothLoadingSpinner()}},function(e){s(e)})}},!1)},Bluetooth.prototype.stopScan=function(e,t){"use strict";var n=this;!!n.adapter()&&n.adapter().powered?(t=typeof t=="undefined"?!1:t,t&&showLoadingSpinner("Stopping"),n.adapter().stopDiscovery(function(){console.log("Stop discovery success."),n.scanning(!1),hideLoadingSpinner("Stopping"),n.hideBluetoothLoadingSpinner(),!e||e()},function(t){console.log("An error occured while stopping bluetooth discovery.",t),hideLoadingSpinner("Stopping"),!e||e(t)})):!e||e()},Bluetooth.prototype.addUpdateDevice=function(e,t){"use strict";var n=this;if(!!e&&!!n.devices()){var r=!1;for(var i=0;i<n.devices().length;++i){var s=n.devices()[i];if(s.address===e.address){n.devices()[i]=e,r=!0;break}}t=typeof t=="undefined"?!0:t,!r&&t&&n.devices.push(e)}},Bluetooth.prototype.removeDevice=function(e){"use strict";var t=this;!!e&&e!==""&&!!t.devices()&&t.devices().length&&t.devices.remove(function(t){return t.address===e})},Bluetooth.prototype.clearDevices=function(){"use strict";this.devices.removeAll(),this.devices([])},Bluetooth.prototype.sortDevices=function(){"use strict";var e=this;!!e.devices()&&e.devices().length&&e.devices.sort(function(e,t){return e.isBonded===t.isBonded?0:e.isBonded?-1:1})},Bluetooth.prototype.saveBluetooth=function(){"use strict";var e=ko.toJS(this.devices().slice(0));for(var t=0;t<e.length;++t){delete e[t].connectToServiceByUUID,delete e[t].uuids;var n=e[t].deviceClass;delete e[t].deviceClass,e[t].deviceClass={},!n||(e[t].deviceClass.major=n.major,e[t].deviceClass.minor=n.minor)}var r={devices:e,lastSync:this.lastSync()},i=Configuration.get("bluetooth"),s=JSON.stringify(i),o=JSON.stringify(r);(!i||o!==s)&&Configuration.set("bluetooth",r,!1)},Bluetooth.prototype.loadSelectedRemoteDevice=function(){"use strict";var e=this;if(typeof tizen.phone!="undefined"&&typeof tizen.phone.getSelectedRemoteDevice!="undefined")try{tizen.phone.getSelectedRemoteDevice(function(t){console.log("selected remote device: ",t),!t||t===""?e.selectedPhone(null):e.selectedPhone(t)})}catch(t){console.log("An error occured while loading selected remote device ",t),e.selectedPhone(null)}},Bluetooth.prototype.selectRemoteDevice=function(e){"use strict";var t=this;console.log("selectRemoteDevice called",e);if(!e||!e.address||!e.deviceClass||e.deviceClass.major!==tizen.bluetooth.deviceMajor.PHONE||typeof tizen.phone=="undefined"||typeof tizen.phone.selectRemoteDevice=="undefined")console.log("tizen.phone.selectRemoteDevice API not available or supplied device is not valid.");else{showLoadingSpinner("Selecting");try{tizen.phone.selectRemoteDevice(e.address)}catch(n){console.log("An error occured while selecting remote device ",n)}}},Bluetooth.prototype.unselectRemoteDevice=function(){"use strict";var e=this;console.log("unselectRemoteDevice called");if(typeof tizen.phone!="undefined"&&typeof tizen.phone.unselectRemoteDevice!="undefined")try{tizen.phone.unselectRemoteDevice()}catch(t){console.log("An error occured while unselecting remote device ",t)}else console.log("tizen.phone.unselectRemoteDevice API not available.")},Bluetooth.prototype.registerSelectedRemoteDeviceChangeListener=function(){"use strict";var e=this;if(typeof tizen.phone!="undefined"&&typeof tizen.phone.addRemoteDeviceSelectedListener!="undefined")try{tizen.phone.addRemoteDeviceSelectedListener(function(t){console.log("addRemoteDeviceSelectedListener: ",t),!t||!t.error?!t||!t.value||t.value.toString().trim()===""?e.selectedPhone(null):e.selectedPhone(t.value.toString().trim()):(console.log("An error occured while selecting remote device: ",t.error),e.selectedPhone(null)),e._restartRefreshDevicesInterval(),hideLoadingSpinner("Selecting")})}catch(t){console.log("An error occured while registering remote device selected listener ",t)}else console.log("tizen.phone.addRemoteDeviceSelectedListener API not available.")},Bluetooth.prototype.refreshDevices=function(){"use strict";function n(){for(var t=0;t<e.devices().length;++t){var n=e.devices()[t];!!e.selectedDevice()&&e.selectedDevice().address===n.address&&e.selectedDevice(n),n.toString().indexOf("BluetoothDevice")===-1&&e.getDevice(n)}e.sortDevices(),e.saveBluetooth()}var e=this;console.log("refreshDevices called");var t=e.devices().slice(0);e.clearDevices(),!!e.adapter()&&e.adapter().powered&&e.devices(t),e.devices().length?e.adapter().getKnownDevices(function(t){if(t.length)for(var r=0;r<t.length;++r)e.addUpdateDevice(t[r],!1);n()},function(e){console.log("Could not get known devices: ",e),n()}):n()},Bluetooth.prototype._restartRefreshDevicesInterval=function(){"use strict";var e=this;e._clearRefreshDevicesInterval(),e.refreshDevices(),e._setRefreshDevicesInterval()}